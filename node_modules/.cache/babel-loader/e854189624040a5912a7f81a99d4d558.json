{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liaml\\\\OneDrive\\\\Documents\\\\Session4\\\\Transactionnel\\\\REACTP4\\\\src\\\\pages\\\\LivresPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Livres from '../components/Livres';\nimport AddLivre from '../components/AddLivre';\nimport LivreHeader from '../components/LivreHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction LivrePage() {\n  _s();\n\n  const [showAddLivre, setShowAddLivre] = useState(false);\n  const [livres, setLivres] = useState([]);\n  useEffect(() => {\n    const getLivres = async () => {\n      const livresFromServer = await fetchLivres();\n      setLivres(livresFromServer);\n    };\n\n    getLivres();\n  }, []); // Ajout de dependency array pour prevenir le 'useEffect' a chaquer 'render()'\n  // C'est comme le lifecycle event 'ComponentDidMount'\n\n  const fetchLivres = async () => {\n    const res = await fetch('http://localhost:8080/livres');\n    const data = await res.json();\n    return data;\n  };\n\n  const addLivre = async livre => {\n    const res = await fetch('http://localhost:8080/livre', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(livre)\n    });\n    const data = await res.json();\n    setLivres([...livres, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  };\n\n  const deleteLivre = async id => {\n    await fetch(`http://localhost:8080/livre/${id}`, {\n      method: 'DELETE'\n    });\n    setLivres(livres.filter(livre => livre.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(LivreHeader, {\n      onAdd: () => setShowAddLivre(!showAddLivre),\n      showAdd: showAddLivre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [showAddLivre && /*#__PURE__*/_jsxDEV(AddLivre, {\n          onAdd: addLivre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 34\n        }, this), livres.length > 0 ? /*#__PURE__*/_jsxDEV(Livres, {\n          livres: livres,\n          onDelete: deleteLivre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this) : 'No livres']\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LivrePage, \"ZB/KclgGYjWeIxSDcKYEtpteM1E=\");\n\n_c = LivrePage;\nexport default LivrePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LivrePage\");","map":{"version":3,"sources":["C:/Users/liaml/OneDrive/Documents/Session4/Transactionnel/REACTP4/src/pages/LivresPage.js"],"names":["useState","useEffect","Livres","AddLivre","LivreHeader","LivrePage","showAddLivre","setShowAddLivre","livres","setLivres","getLivres","livresFromServer","fetchLivres","res","fetch","data","json","addLivre","livre","method","headers","body","JSON","stringify","deleteLivre","id","filter","length"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;;AAKA,SAASC,SAAT,GAAoB;AAAA;;AAChB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,SAAS,GAAG,YAAY;AAC7B,YAAMC,gBAAgB,GAAG,MAAMC,WAAW,EAA1C;AACAH,MAAAA,SAAS,CAACE,gBAAD,CAAT;AACH,KAHE;;AAIJD,IAAAA,SAAS;AACV,GANU,EAMR,EANQ,CAAT,CAJgB,CAUV;AACR;;AAEA,QAAME,WAAW,GAAG,YAAY;AAC9B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAQA,QAAME,QAAQ,GAAG,MAAOC,KAAP,IAAiB;AAChC,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,EACvB;AACEK,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AALR,KADuB,CAAvB;AAQA,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYO,IAAZ,CAAD,CAAT,CAVgC,CAahC;AACA;AACA;AACD,GAhBD;;AAkBA,QAAMS,WAAW,GAAG,MAAOC,EAAP,IAAc;AAChC,UAAMX,KAAK,CAAE,+BAA8BW,EAAG,EAAnC,EAAsC;AAC/CN,MAAAA,MAAM,EAAE;AADuC,KAAtC,CAAX;AAGAV,IAAAA,SAAS,CAACD,MAAM,CAACkB,MAAP,CAAeR,KAAD,IAAWA,KAAK,CAACO,EAAN,KAAaA,EAAtC,CAAD,CAAT;AACD,GALD;;AAME,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACQ,QAAC,WAAD;AAAa,MAAA,KAAK,EAAE,MAAMlB,eAAe,CAAC,CAACD,YAAF,CAAzC;AACA,MAAA,OAAO,EAAEA;AADT;AAAA;AAAA;AAAA;AAAA,YADR,eAII;AAAA,6BACI;AAAA,mBACCA,YAAY,iBAAI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEW;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADjB,EAECT,MAAM,CAACmB,MAAP,GAAgB,CAAhB,gBACG,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAEnB,MAAhB;AACA,UAAA,QAAQ,EAAEgB;AADV;AAAA;AAAA;AAAA;AAAA,gBADH,GAGC,WALF;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAhEQnB,S;;KAAAA,S;AAkET,eAAeA,SAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport Livres from '../components/Livres'\r\nimport AddLivre from '../components/AddLivre';\r\nimport LivreHeader from '../components/LivreHeader';\r\n\r\n\r\n\r\n\r\nfunction LivrePage(){\r\n    const [showAddLivre, setShowAddLivre] = useState(false)\r\n    const [livres, setLivres] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getLivres = async () => {\r\n         const livresFromServer = await fetchLivres()\r\n         setLivres(livresFromServer)\r\n     }\r\n    getLivres()\r\n  }, [])  // Ajout de dependency array pour prevenir le 'useEffect' a chaquer 'render()'\r\n  // C'est comme le lifecycle event 'ComponentDidMount'\r\n\r\n  const fetchLivres = async () => {\r\n    const res = await fetch('http://localhost:8080/livres')\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  \r\n\r\n  const addLivre = async (livre) => {\r\n    const res = await fetch('http://localhost:8080/livre',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(livre)\r\n    })\r\n    const data = await res.json()\r\n    setLivres([...livres, data])\r\n\r\n    \r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = {id, ...task}\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  const deleteLivre = async (id) => {\r\n    await fetch(`http://localhost:8080/livre/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n    setLivres(livres.filter((livre) => livre.id !== id))\r\n  }\r\n    return (\r\n        <div className='container'>\r\n                <LivreHeader onAdd={() => setShowAddLivre(!showAddLivre)}\r\n                showAdd={showAddLivre}/>\r\n            \r\n            <div>\r\n                <>\r\n                {showAddLivre && <AddLivre onAdd={addLivre} />}\r\n                {livres.length > 0 ?\r\n                    <Livres livres={livres} \r\n                    onDelete={deleteLivre}/>\r\n                : 'No livres'} \r\n                </>\r\n                \r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n    \r\n}\r\n\r\nexport default LivrePage"]},"metadata":{},"sourceType":"module"}