{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liaml\\\\OneDrive\\\\Documents\\\\Session4\\\\Transactionnel\\\\REACTP4\\\\src\\\\pages\\\\DocumentsPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Documents from '../components/Documents';\nimport AddLivre from '../components/AddLivre';\nimport DocumentHeader from '../components/DocumentHeader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DocumentPage() {\n  _s();\n\n  const [showAddDocument, setShowAddDocument] = useState(false);\n  const [documents, setDocuments] = useState([]);\n  useEffect(() => {\n    const getDocuments = async () => {\n      const documentsFromServer = await fetchDocuments();\n      setDocuments(documentsFromServer);\n    };\n\n    getDocuments();\n  }, []); // Ajout de dependency array pour prevenir le 'useEffect' a chaquer 'render()'\n  // C'est comme le lifecycle event 'ComponentDidMount'\n\n  const fetchDocuments = async () => {\n    const res = await fetch('http://localhost:8080/documents');\n    const data = await res.json();\n    return data;\n  };\n\n  const addDocument = async document => {\n    const res = await fetch('http://localhost:8080/document', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(document)\n    });\n    const data = await res.json();\n    setDocuments([...documents, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = {id, ...task}\n    // setTasks([...tasks, newTask])\n  };\n\n  const deleteDocument = async id => {\n    await fetch(`http://localhost:8080/document/${id}`, {\n      method: 'DELETE'\n    });\n    setDocuments(documents.filter(document => document.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(DocumentHeader, {\n      onAdd: () => setShowAddDocument(!showAddDocument),\n      showAdd: showAddDocument\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [showAddDocument && /*#__PURE__*/_jsxDEV(AddLivre, {\n          onAdd: addDocument\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 37\n        }, this), documents.length > 0 ? /*#__PURE__*/_jsxDEV(Documents, {\n          documents: documents,\n          onDelete: deleteDocument\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this) : 'No documents']\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DocumentPage, \"6d/tk6DCuucpBXDuqEyaoJL9pGQ=\");\n\n_c = DocumentPage;\nexport default DocumentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentPage\");","map":{"version":3,"sources":["C:/Users/liaml/OneDrive/Documents/Session4/Transactionnel/REACTP4/src/pages/DocumentsPage.js"],"names":["useState","useEffect","Documents","AddLivre","DocumentHeader","DocumentPage","showAddDocument","setShowAddDocument","documents","setDocuments","getDocuments","documentsFromServer","fetchDocuments","res","fetch","data","json","addDocument","document","method","headers","body","JSON","stringify","deleteDocument","id","filter","length"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;;AAKA,SAASC,YAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,YAAY,GAAG,YAAY;AAChC,YAAMC,mBAAmB,GAAG,MAAMC,cAAc,EAAhD;AACAH,MAAAA,YAAY,CAACE,mBAAD,CAAZ;AACH,KAHE;;AAIJD,IAAAA,YAAY;AACb,GANU,EAMR,EANQ,CAAT,CAJmB,CAUb;AACR;;AAEA,QAAME,cAAc,GAAG,YAAY;AACjC,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACD,GAJD;;AAQA,QAAME,WAAW,GAAG,MAAOC,QAAP,IAAoB;AACtC,UAAML,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EACvB;AACEK,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AALR,KADuB,CAAvB;AAQA,UAAMH,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,IAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeO,IAAf,CAAD,CAAZ,CAVsC,CAatC;AACA;AACA;AACD,GAhBD;;AAkBA,QAAMS,cAAc,GAAG,MAAOC,EAAP,IAAc;AACnC,UAAMX,KAAK,CAAE,kCAAiCW,EAAG,EAAtC,EAAyC;AAClDN,MAAAA,MAAM,EAAE;AAD0C,KAAzC,CAAX;AAGAV,IAAAA,YAAY,CAACD,SAAS,CAACkB,MAAV,CAAkBR,QAAD,IAAcA,QAAQ,CAACO,EAAT,KAAgBA,EAA/C,CAAD,CAAZ;AACD,GALD;;AAME,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACQ,QAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,MAAMlB,kBAAkB,CAAC,CAACD,eAAF,CAA/C;AACA,MAAA,OAAO,EAAEA;AADT;AAAA;AAAA;AAAA;AAAA,YADR,eAII;AAAA,6BACI;AAAA,mBACCA,eAAe,iBAAI,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEW;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADpB,EAECT,SAAS,CAACmB,MAAV,GAAmB,CAAnB,gBACG,QAAC,SAAD;AAAW,UAAA,SAAS,EAAEnB,SAAtB;AACA,UAAA,QAAQ,EAAEgB;AADV;AAAA;AAAA;AAAA;AAAA,gBADH,GAGC,cALF;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAhEQnB,Y;;KAAAA,Y;AAkET,eAAeA,YAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport Documents from '../components/Documents'\r\nimport AddLivre from '../components/AddLivre';\r\nimport DocumentHeader from '../components/DocumentHeader';\r\n\r\n\r\n\r\n\r\nfunction DocumentPage(){\r\n    const [showAddDocument, setShowAddDocument] = useState(false)\r\n    const [documents, setDocuments] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getDocuments = async () => {\r\n         const documentsFromServer = await fetchDocuments()\r\n         setDocuments(documentsFromServer)\r\n     }\r\n    getDocuments()\r\n  }, [])  // Ajout de dependency array pour prevenir le 'useEffect' a chaquer 'render()'\r\n  // C'est comme le lifecycle event 'ComponentDidMount'\r\n\r\n  const fetchDocuments = async () => {\r\n    const res = await fetch('http://localhost:8080/documents')\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  \r\n\r\n  const addDocument = async (document) => {\r\n    const res = await fetch('http://localhost:8080/document',\r\n    {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json',\r\n      },\r\n      body: JSON.stringify(document)\r\n    })\r\n    const data = await res.json()\r\n    setDocuments([...documents, data])\r\n\r\n    \r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = {id, ...task}\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  const deleteDocument = async (id) => {\r\n    await fetch(`http://localhost:8080/document/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n    setDocuments(documents.filter((document) => document.id !== id))\r\n  }\r\n    return (\r\n        <div className='container'>\r\n                <DocumentHeader onAdd={() => setShowAddDocument(!showAddDocument)}\r\n                showAdd={showAddDocument}/>\r\n            \r\n            <div>\r\n                <>\r\n                {showAddDocument && <AddLivre onAdd={addDocument} />}\r\n                {documents.length > 0 ?\r\n                    <Documents documents={documents} \r\n                    onDelete={deleteDocument}/>\r\n                : 'No documents'} \r\n                </>\r\n                \r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n    \r\n}\r\n\r\nexport default DocumentPage"]},"metadata":{},"sourceType":"module"}