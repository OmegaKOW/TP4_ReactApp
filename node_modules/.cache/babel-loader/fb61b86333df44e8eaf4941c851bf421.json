{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\liaml\\\\OneDrive\\\\Documents\\\\Session4\\\\Transactionnel\\\\react-task-tracker\\\\react-task-tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    console.log(\"toggler reminder \", 1);\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }, this) : 'No tasks']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"s8LzkA5aeSm1dim22ZlWGmFnnlE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/liaml/OneDrive/Documents/Session4/Transactionnel/react-task-tracker/react-task-tracker/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","addTask","task","id","Math","floor","random","newTask","deleteTask","filter","toggleReminder","console","log","map","reminder","length"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMC,EAAE,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAACJ,MAAAA,EAAD;AAAK,SAAGD;AAAR,KAAhB;AACAF,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;AACD,GAJD;;AAMA,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBH,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcP,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMO,cAAc,GAAIP,EAAD,IAAQ;AAC7BQ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,CAAjC;AACAZ,IAAAA,QAAQ,CACND,KAAK,CAACc,GAAN,CACGX,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GACR,EAAC,GAAGD,IAAJ;AAAUY,MAAAA,QAAQ,EAAE,CAACZ,IAAI,CAACY;AAA1B,KADQ,GAC8BZ,IAF1C,CADM,CAAR;AAMD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAMJ,cAAc,CAAC,CAACD,WAAF,CAAnC;AACA,MAAA,OAAO,EAAEA;AADT;AAAA;AAAA;AAAA;AAAA,YADF,EAGGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHlB,EAIGF,KAAK,CAACgB,MAAN,GAAe,CAAf,gBACA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AACA,MAAA,QAAQ,EAAES,UADV;AAEA,MAAA,QAAQ,EAAEE;AAFV;AAAA;AAAA;AAAA;AAAA,YADA,GAIE,UARL;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApCQd,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["import {useState} from 'react'\r\nimport './App.css';\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask';\r\n\r\nfunction App() {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 10000) + 1\r\n    const newTask = {id, ...task}\r\n    setTasks([...tasks, newTask])\r\n  }\r\n\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  const toggleReminder = (id) => {\r\n    console.log(\"toggler reminder \", 1)\r\n    setTasks(\r\n      tasks.map(\r\n        (task) => task.id === id ?\r\n          {...task, reminder: !task.reminder} : task\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\r\n      showAdd={showAddTask}/>\r\n      {showAddTask && <AddTask onAdd={addTask} />}\r\n      {tasks.length > 0 ?\r\n       <Tasks tasks={tasks} \r\n       onDelete={deleteTask}\r\n       onToggle={toggleReminder}/>\r\n       : 'No tasks'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}